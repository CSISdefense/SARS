descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "vol3")
write.csv(data, "output_vol3.csv")
write.csv(descriptions, "descriptions_vol3.csv")
################################################################################
# Excel spreadsheet parsing for FYDP initiative project
#
#
#
################################################################################
require(tidyverse)
require(openxlsx)
source("rdte_tidy_functions.R")
source("rdte_parser_functions.R")
# Read names of all worksheets in the workbook into character vector *sheets*
sheets <- getSheetNames("vol4.xlsx")
################################################################################
# Initialize *descriptions* dataframe:
# Stores descriptions, with file name and table name to use as keys
# allowing descriptions to be rejoined with data later if desired
################################################################################
descriptions <- data.frame(
Source.File = rep("vol4.xlsx", length(sheets)),
Table = character(length(sheets)),
Description = character(length(sheets)),
stringsAsFactors = FALSE
)
################################################################################
# Initialize *datalist*:
# A list where we'll dump dataframes full of relevant data,
# as we find it while scanning through the worksheets.
################################################################################
datalist = list()
################################################################################
# Scan through worksheets one at a time, looking for relevant data.
# Upon finding one with the format we're looking for, read it and tidy the data.
# Then dump the tidied dataframe into *datalist*
################################################################################
for(i in seq_along(sheets)){
current_sheet <- FYDP_open_sheet("vol4.xlsx", sheets[i])
if(grepl("COST", current_sheet[3,1]) &
grepl("Exhibit R-2, RDT&E Budget Item Justification", current_sheet[1,1])){
descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "vol4")
write.csv(data, "output_vol4.csv")
write.csv(descriptions, "descriptions_vol4.csv")
################################################################################
# Excel spreadsheet parsing for FYDP initiative project
#
#
#
################################################################################
require(tidyverse)
require(openxlsx)
source("rdte_tidy_functions.R")
source("rdte_parser_functions.R")
# Read names of all worksheets in the workbook into character vector *sheets*
sheets <- getSheetNames("vol5a.xlsx")
################################################################################
# Initialize *descriptions* dataframe:
# Stores descriptions, with file name and table name to use as keys
# allowing descriptions to be rejoined with data later if desired
################################################################################
descriptions <- data.frame(
Source.File = rep("vol5a.xlsx", length(sheets)),
Table = character(length(sheets)),
Description = character(length(sheets)),
stringsAsFactors = FALSE
)
################################################################################
# Initialize *datalist*:
# A list where we'll dump dataframes full of relevant data,
# as we find it while scanning through the worksheets.
################################################################################
datalist = list()
################################################################################
# Scan through worksheets one at a time, looking for relevant data.
# Upon finding one with the format we're looking for, read it and tidy the data.
# Then dump the tidied dataframe into *datalist*
################################################################################
for(i in seq_along(sheets)){
current_sheet <- FYDP_open_sheet("vol5a.xlsx", sheets[i])
if(grepl("COST", current_sheet[3,1]) &
grepl("Exhibit R-2, RDT&E Budget Item Justification", current_sheet[1,1])){
descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "vol5a")
write.csv(data, "output_vol5a.csv")
write.csv(descriptions, "descriptions_vol5a.csv")
################################################################################
# Excel spreadsheet parsing for FYDP initiative project
#
#
#
################################################################################
require(tidyverse)
require(openxlsx)
source("rdte_tidy_functions.R")
source("rdte_parser_functions.R")
# Read names of all worksheets in the workbook into character vector *sheets*
sheets <- getSheetNames("vol5b.xlsx")
################################################################################
# Initialize *descriptions* dataframe:
# Stores descriptions, with file name and table name to use as keys
# allowing descriptions to be rejoined with data later if desired
################################################################################
descriptions <- data.frame(
Source.File = rep("vol5b.xlsx", length(sheets)),
Table = character(length(sheets)),
Description = character(length(sheets)),
stringsAsFactors = FALSE
)
################################################################################
# Initialize *datalist*:
# A list where we'll dump dataframes full of relevant data,
# as we find it while scanning through the worksheets.
################################################################################
datalist = list()
################################################################################
# Scan through worksheets one at a time, looking for relevant data.
# Upon finding one with the format we're looking for, read it and tidy the data.
# Then dump the tidied dataframe into *datalist*
################################################################################
for(i in seq_along(sheets)){
current_sheet <- FYDP_open_sheet("vol5b.xlsx", sheets[i])
if(grepl("COST", current_sheet[3,1]) &
grepl("Exhibit R-2, RDT&E Budget Item Justification", current_sheet[1,1])){
descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "vol5b")
write.csv(data, "output_vol5b.csv")
write.csv(descriptions, "descriptions_vol5b.csv")
################################################################################
# Excel spreadsheet parsing for FYDP initiative project
#
#
#
################################################################################
require(tidyverse)
require(openxlsx)
source("rdte_tidy_functions.R")
source("rdte_parser_functions.R")
# Read names of all worksheets in the workbook into character vector *sheets*
sheets <- getSheetNames("vol5b.xlsx")
################################################################################
# Initialize *descriptions* dataframe:
# Stores descriptions, with file name and table name to use as keys
# allowing descriptions to be rejoined with data later if desired
################################################################################
descriptions <- data.frame(
Source.File = rep("vol5b.xlsx", length(sheets)),
Table = character(length(sheets)),
Description = character(length(sheets)),
stringsAsFactors = FALSE
)
################################################################################
# Initialize *datalist*:
# A list where we'll dump dataframes full of relevant data,
# as we find it while scanning through the worksheets.
################################################################################
datalist = list()
################################################################################
# Scan through worksheets one at a time, looking for relevant data.
# Upon finding one with the format we're looking for, read it and tidy the data.
# Then dump the tidied dataframe into *datalist*
################################################################################
for(i in seq_along(sheets)){
current_sheet <- FYDP_open_sheet("vol5b.xlsx", sheets[i])
if(grepl("COST", current_sheet[3,1]) &
grepl("Exhibit R-2, RDT&E Budget Item Justification", current_sheet[1,1])){
descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "vol5b")
write.csv(data, "output_vol5b.csv")
write.csv(descriptions, "descriptions_vol5b.csv")
################################################################################
# Excel spreadsheet parsing for FYDP initiative project
#
#
#
################################################################################
require(tidyverse)
require(openxlsx)
source("rdte_tidy_functions.R")
source("rdte_parser_functions.R")
# Read names of all worksheets in the workbook into character vector *sheets*
sheets <- getSheetNames("vol6.xlsx")
################################################################################
# Initialize *descriptions* dataframe:
# Stores descriptions, with file name and table name to use as keys
# allowing descriptions to be rejoined with data later if desired
################################################################################
descriptions <- data.frame(
Source.File = rep("vol6.xlsx", length(sheets)),
Table = character(length(sheets)),
Description = character(length(sheets)),
stringsAsFactors = FALSE
)
################################################################################
# Initialize *datalist*:
# A list where we'll dump dataframes full of relevant data,
# as we find it while scanning through the worksheets.
################################################################################
datalist = list()
################################################################################
# Scan through worksheets one at a time, looking for relevant data.
# Upon finding one with the format we're looking for, read it and tidy the data.
# Then dump the tidied dataframe into *datalist*
################################################################################
for(i in seq_along(sheets)){
current_sheet <- FYDP_open_sheet("vol6.xlsx", sheets[i])
if(grepl("COST", current_sheet[3,1]) &
grepl("Exhibit R-2, RDT&E Budget Item Justification", current_sheet[1,1])){
descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "vol6")
write.csv(data, "output_vol6.csv")
write.csv(descriptions, "descriptions_vol6.csv")
################################################################################
# Excel spreadsheet parsing for FYDP initiative project
#
#
#
################################################################################
require(tidyverse)
require(openxlsx)
source("rdte_tidy_functions.R")
source("rdte_parser_functions.R")
# Read names of all worksheets in the workbook into character vector *sheets*
sheets <- getSheetNames("vol7.xlsx")
################################################################################
# Initialize *descriptions* dataframe:
# Stores descriptions, with file name and table name to use as keys
# allowing descriptions to be rejoined with data later if desired
################################################################################
descriptions <- data.frame(
Source.File = rep("vol7.xlsx", length(sheets)),
Table = character(length(sheets)),
Description = character(length(sheets)),
stringsAsFactors = FALSE
)
################################################################################
# Initialize *datalist*:
# A list where we'll dump dataframes full of relevant data,
# as we find it while scanning through the worksheets.
################################################################################
datalist = list()
################################################################################
# Scan through worksheets one at a time, looking for relevant data.
# Upon finding one with the format we're looking for, read it and tidy the data.
# Then dump the tidied dataframe into *datalist*
################################################################################
for(i in seq_along(sheets)){
current_sheet <- FYDP_open_sheet("vol7.xlsx", sheets[i])
if(grepl("COST", current_sheet[3,1]) &
grepl("Exhibit R-2, RDT&E Budget Item Justification", current_sheet[1,1])){
descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "vol7")
write.csv(data, "output_vol7.csv")
write.csv(descriptions, "descriptions_vol7.csv")
################################################################################
# Excel spreadsheet parsing for FYDP initiative project
#
#
#
################################################################################
require(tidyverse)
require(openxlsx)
source("rdte_tidy_functions.R")
source("rdte_parser_functions.R")
# Read names of all worksheets in the workbook into character vector *sheets*
sheets <- getSheetNames("AFD-160208-052.xlsx")
################################################################################
# Initialize *descriptions* dataframe:
# Stores descriptions, with file name and table name to use as keys
# allowing descriptions to be rejoined with data later if desired
################################################################################
descriptions <- data.frame(
Source.File = rep("AFD-160208-052.xlsx", length(sheets)),
Table = character(length(sheets)),
Description = character(length(sheets)),
stringsAsFactors = FALSE
)
################################################################################
# Initialize *datalist*:
# A list where we'll dump dataframes full of relevant data,
# as we find it while scanning through the worksheets.
################################################################################
datalist = list()
################################################################################
# Scan through worksheets one at a time, looking for relevant data.
# Upon finding one with the format we're looking for, read it and tidy the data.
# Then dump the tidied dataframe into *datalist*
################################################################################
for(i in seq_along(sheets)){
current_sheet <- FYDP_open_sheet("AFD-160208-052.xlsx", sheets[i])
if(grepl("COST", current_sheet[3,1]) &
grepl("Exhibit R-2, RDT&E Budget Item Justification", current_sheet[1,1])){
descriptions$Description[i] <- FYDP_copy_description(current_sheet)
descriptions$Table[i] <- sheets[i]
current_sheet <- FYDP_tidy_sheet(current_sheet)
current_sheet <- mutate(current_sheet, Table = sheets[i])
datalist[[i]] <- current_sheet
cat("Found a good one, #", i, "\n")
}
cat("Reading", i, "\n")
}
################################################################################
# Merge all the dataframes in *datalist* into one big dataframe,
# and write it out to a .csv.
################################################################################
data <- bind_rows(datalist)
data <- mutate(data, Source.File = "AFD-160208-052")
write.csv(data, "output_AFD-160208-052.csv")
write.csv(descriptions, "descriptions_AFD-160208-052.csv")
?paste0
?htmlParse
install.packages("RCurl")
install.packages("XML")
?htmlParse
?htmltxt
??htmltxt
setwd('')
library(RCurl)
library(XML)
download_year_xlsx_files <- function(year) {
#
# Description
# -------------------
# This is a function to download all xls and xlsx files for a specific year
#
domain <- 'http://comptroller.defense.gov'
prelink <- 'http://comptroller.defense.gov/Budget-Materials/Budget'
# Creates the URL for the specific year
link <- paste0(prelink, year, '/')
# Get html from the specific URL
htmltxt <- getURL(link)
htmltxt <- htmlParse(htmltxt)
# Find all <a> elements that ends with "xlsx"
l1 <- htmltxt['//a[substring(@href, string-length(@href) - 2) = "xlsx"]/@href']
# Find all <a> elements that ends with "xls"
l2 <- htmltxt['//a[substring(@href, string-length(@href) - 2) = "xls"]/@href']
# Join <a> elements
hreflist <- c(l1, l2)
if (length(hreflist) == 0) {
return(paste0('0 files downloaded for year ', year, '.'))
}
# Get absolute URLs (hreflist has only relative urls, we need to paste the domain).
hreflist <- lapply(hreflist, function(x) {
domain <- 'http://comptroller.defense.gov'
link <- paste0(domain, x[1])
return(link)}
)
# Get the name of the file (the string after the last "/")
names <- lapply(hreflist, function(x) {
txtlist <- strsplit(x, '/')[[1]]
n <- length(txtlist)
return(txtlist[n])
})
# Download all documents in the list
for (i in 1:length(names)) {
name <- names[[i]]
url <- hreflist[[i]]
download.file(url, name, method='curl')
}
return(paste0(length(names), ' files downloaded for year ', year, '.'))
}
#
# Run for all the year
#
years <- 1998:2017
for (year in years) {
d <- download_year_xlsx_files(year)
print(d)
}
?c\
?c
?lapply
?strsplit
setwd("K:/stuff shivani is working on")
require(tidyverse)
require(openxlsx)
setwd("K:/stuff shivani is working on")
bloom <- FYDP_open_sheet("Bloom.xlsx")
bloom <- FYDP_open_sheet("Bloom.xlsx", "Sheet1")
?rm(list=ls())
rm(list=ls())
require(tidyverse)
require(openxlsx)
setwd("K:/stuff shivani is working on")
bloom <- FYDP_open_sheet("Bloom.xlsx", "Sheet1")
read.csv("Bloom.xlsx", "Sheet1")
source('~/.active-rstudio-document', echo=TRUE)
read.xlsx("Bloom.xlsx")
open.xlsx("Bloom.xlsx")
bloom <- open.xlsx("Bloom.xlsx")
bloom <- read.xlsx("Bloom.xlsx")
?data.table
install.packages("data.table")
data.table::data.table() <- bloom
data.table <- bloom
View(data.table)
?read.xlsx
bloom <- read.xlsx("Bloom.xlsx")
df <- bloom
install.packages("XLConnec")
install.packages("XLConnect")
library(XLConnect)
bloom <- loadWorkbook("Bloom.xlsx")
View(data.table)
sp <- data.frame(bloom, c(2, 5, 8:10, 28))
library(XLConnect)
setwd("K:/stuff shivani is working on")
bloom <- loadWorkbook("Bloom.xlsx")
sp <- data.frame(bloom, c(2, 5, 8:10, 28))
library(openxlsx)
setwd("K:/stuff shivani is working on")
bloom <- loadWorkbook("Bloom.xlsx")
sp <- data.frame(bloom, c(2, 5, 8:10, 28))
?`data.frame
)
)))))
''
"
rm(list=ls())
